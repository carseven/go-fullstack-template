package layout

script loadDevServer() {
	var wsuri = "ws://127.0.0.1:3000/ws";

	window.onload = function () {
		console.log("[INIT WS] Dev Server");
		const sock = new WebSocket(wsuri);
		sock.onopen = function () {
			console.log("[CONNECTED WS] Dev Server: " + wsuri);
		};

		sock.onclose = function (e) {
			console.log("[DISCONNECTED WS] Dev Server: " + wsuri);
			console.log("[ERROR] (" + e.code + ")");

			// Poll server until up
			console.log("[INIT POOLING] Dev Server. Trying to reconnect the dev server!" + wsuri);
			setInterval(() => {
				fetch("http://127.0.0.1:3000/health").then((devServerResponse) => {
					// Check if response 200 (Server is up and running again, reload client page)
					if (devServerResponse.status === 200) {
						window.location.reload();
					} else {
						console.log("[ERROR] Dev server connected but response is not 200!")	
					}
				}).catch(() => {
					console.log("[ERROR] Dev server not connected!")
				})
			}, 500);
		};

		// Ping pong to check connection
		setInterval(() => {
			sock.send("PING");
		}, 5000)
	};

}

script checkColorSchemaPreference() {
	// On page load or when changing themes, best to add inline in `head` to avoid FOUC
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
    } else {
        document.documentElement.classList.remove('dark')
    }
}

script handleColoSchemaSwitcher() {
	var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
	var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

	// Change the icons inside the button based on previous settings
	if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
		themeToggleLightIcon.classList.remove('hidden');
	} else {
		themeToggleDarkIcon.classList.remove('hidden');
	}

	var themeToggleBtn = document.getElementById('theme-toggle');
	themeToggleBtn.addEventListener('click', function() {

		// toggle icons inside button
		themeToggleDarkIcon.classList.toggle('hidden');
		themeToggleLightIcon.classList.toggle('hidden');

		// if set via local storage previously
		if (localStorage.getItem('color-theme')) {
			if (localStorage.getItem('color-theme') === 'light') {
				document.documentElement.classList.add('dark');
				localStorage.setItem('color-theme', 'dark');
			} else {
				document.documentElement.classList.remove('dark');
				localStorage.setItem('color-theme', 'light');
			}

		// if NOT set via local storage previously
		} else {
			if (document.documentElement.classList.contains('dark')) {
				document.documentElement.classList.remove('dark');
				localStorage.setItem('color-theme', 'light');
			} else {
				document.documentElement.classList.add('dark');
				localStorage.setItem('color-theme', 'dark');
			}
		}
	});
}

templ Base(component templ.Component, navbar templ.Component, footer templ.Component, environment string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<!-- TODO: Parametrize SEO meta info with variables-->
			<meta name="description" content="TODO: Add page description"/>
			<title>TODO: Change page title</title>
			<!-- TODO: Add basic header information, create a component to add openGraph and other stuf -->
			<!-- Add defer if HTMX is not going to be used at the beginning when the page has been loaded This will remove the block of the script and render the HTML content a bit faster -->
			<script src="/assets/htmx"></script>
			@checkColorSchemaPreference()
			if environment == "DEV" {
				@loadDevServer()
			}
			<link rel="stylesheet" href="/assets/tailwind"/>
			// TODO: Add from npm i <script src="../path/to/flowbite/dist/flowbite.min.js"></script> or just
			<script defer src="/assets/flowbite"></script>
		</head>
		<body class="bg-white dark:bg-black" onload={ handleColoSchemaSwitcher() }>
			@navbar
			@component
			@footer
		</body>
	</html>
}
